---

image:
  registry: ghcr.io/softwareag-government-solutions
  repository: webmethods-apigateway
  pullPolicy: IfNotPresent
  tag: 10.11-latest

imagePullSecrets:
  - name: saggov-ghcr

licenseSecret:
  name: softwareag-apimgt-licenses
  key: apigateway-license
  path: license.xml

replicaCount: 2

envConfigs:
  JAVA_MIN_MEM: 1g
  JAVA_MAX_MEM: 2g
  JAVA_OPTS: ""
  RUNTIME_WATT_PROPERTIES: watt.server.cachemanager.connectTimeout=300000 watt.server.threadPoolMin=10 watt.server.threadPool=500 watt.server.control.serverThreadThreshold=20 watt.net.timeout=400 watt.security.ssl.cacheClientSessions=true watt.net.maxClientKeepaliveConns=10 watt.security.ssl.resumeClientSessions=true
  HEALTHCHECK_ELASTIC_USER: elastic
  apigw_elasticsearch_tenantId: default
  apigw_elasticsearch_hosts: elasticsearch-es-sag-apidatastore:9200
  apigw_elasticsearch_autostart: "false"
  apigw_elasticsearch_http_username: elastic
  apigw_elasticsearch_https_enabled: "false"
  apigw_kibana_autostart: "false"
  apigw_kibana_dashboardInstance: http://kibana-kb-http:5601

envSecretConfigs:
  apigw_elasticsearch_http_password:
    secretKeyRef: elasticsearch-es-elastic-user
    key: elastic
  HEALTHCHECK_ELASTIC_PASSWORD:
    secretKeyRef: elasticsearch-es-elastic-user
    key: elastic

clusteringType: ignite

commonConfigs:
  apigw:
    elasticsearch:
      http:
        keepAlive: true
        keepAliveMaxConnections: 10
        keepAliveMaxConnectionsPerRoute: 100
        connectionTimeout: 1000
        socketTimeout: 10000
        maxRetryTimeout: 100000
      https:
        enabled: false
        enforceHostnameVerification: false
        # keystoreFilepath: "{{ webmethods_apigateway_keystore_filepath }}"
        # truststoreFilepath: "{{ webmethods_apigateway_truststore_filepath }}"
        # keystoreAlias: "{{ webmethods_apigateway_keystore_keyalias }}"
        # keystorePassword: "{{ webmethods_apigateway_keystore_password }}"
        # truststorePassword: "{{ webmethods_apigateway_truststore_password }}"
      sniff:
        enable: false
        timeInterval: 1000
      outboundProxy:
        enabled: false
        alias: somealias
      clientHttpResponseSize: 1001231

configurator:
  enabled: false
  settings:
    restUsername: Administrator
    restPasswordSecret:
      name: softwareag-apimgt-app-passwords
      key: administrator
    restPasswordOld: "manage"
    extendedSettings: []
    loadBalancer:
      http: http://webmethods-apigateway.cluster-demo.apimgt.saggov
      https: https://webmethods-apigateway.cluster-demo.apimgt.saggov
      webapp: http://webmethods-apigateway.cluster-demo.apimgt.saggov
    portal:
      apigateway:
        protocol: http
        username: Administrator
        passwordSecret:
          name: softwareag-apimgt-app-passwords
          key: administrator
      url: https://webmethods-devportal:18101/portal
      tenant: default
      stage: test
      username: Administrator
      passwordSecret:
        name: softwareag-apimgt-app-passwords
        key: administrator

waitforelastic:
  enabled: true
  uri: http://elasticsearch-es-sag-apidatastore:9200
  username: elastic
  passwordSecret:
    name: elasticsearch-es-elastic-user
    key: elastic

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 20
  targetCPUUtilizationPercentage: 50

# apply stickiness for the UI ingress
service:
  gwruntime:
    port: 5555
  gwui:
    annotations:
      traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
    port: 9072

# ingress
ingress:
  gwruntime:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web
    host: webmethods-apigateway.cluster-demo.apimgt.saggov
  gwui:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web
    host: webmethods-apigateway.cluster-demo.apimgt.saggov