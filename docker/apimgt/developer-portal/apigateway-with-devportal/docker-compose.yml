version: "3.2"

networks:
  stack:
    driver: bridge

volumes:
  esdata:
    driver: local

services:

  devportal:
    image: ${REG}webmethods-devportal:${TAG_PORTAL}
    ports:
      - "18101:18101"
      - "18102:18102"
    environment: 
      JAVA_MIN_MEM: 512m
      JAVA_MAX_MEM: 512m
      JAVA_OPTS: ""
      PORTAL_SERVER_CONFIG_TENANT: default
      PORTAL_SERVER_CONFIG_LICENSE: /opt/softwareag/licenseKey.xml
      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
      SPRING_ELASTICSEARCH_REST_USERNAME: elastic
      SPRING_ELASTICSEARCH_REST_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - ${PWD}/licensing/devportal-licenseKey.xml:/opt/softwareag/licenseKey.xml:ro
    hostname: devportal
    networks:
      - stack
    depends_on: 
      elasticsearch:
        condition: service_started

  devportal_configurator:
    image: ${REG}webmethods-devportal-configurator:${TAG_PORTAL_CONFIGURATOR}
    environment:
      env_devportal_protocol: http
      env_devportal_host: devportal
      env_devportal_port: "18101"
      env_devportal_rest_user: Administrator
      env_devportal_rest_password: "${SAG_PASSWORD}"
      env_devportal_rest_password_old: "manage"
      env_devportal_configure_default_ignore_errors: "true"
    networks:
      - stack
    depends_on: 
      elasticsearch:
        condition: service_started

  apigateway:
    image: ${REG}webmethods-apigateway:${TAG_APIGATEWAY}
    ports:
      - 5555:5555
      - 9072:9072
    environment: 
      JAVA_MIN_MEM: 512m
      JAVA_MAX_MEM: 512m
      JAVA_OPTS: ""
      APIGW_ELASTICSEARCH_TENANTID: apigateway
      APIGW_ELASTICSEARCH_AUTOSTART: "false"
      APIGW_ELASTICSEARCH_HOSTS: elasticsearch:9200
      APIGW_ELASTICSEARCH_HTTP_USERNAME: elastic
      APIGW_ELASTICSEARCH_HTTP_PASSWORD: ${ELASTIC_PASSWORD}
      APIGW_ELASTICSEARCH_HTTPS_ENABLED: "false"
      APIGW_KIBANA_DASHBOARDINSTANCE: http://kibana:5601
      APIGW_KIBANA_AUTOSTART: "false"
    volumes:
      - ${PWD}/licensing/apigateway-licenseKey.xml:/opt/softwareag/IntegrationServer/instances/default/config/licenseKey.xml:rw
    hostname: apigateway
    networks:
      - stack
    depends_on: 
      elasticsearch:
        condition: service_started

  apigateway_configurator:
    image: ${REG}webmethods-apigateway-configurator:${TAG_APIGATEWAY_CONFIGURATOR}
    environment:
      env_apigateway_host: apigateway
      env_apigateway_port: "5555"
      env_apigateway_rest_user: Administrator
      env_apigateway_rest_password: "${SAG_PASSWORD}"
      env_apigateway_rest_password_old: "manage"
      env_apigateway_configure_default_ignore_errors: "true"
      env_apigateway_configure_lb: "true"
      env_apigateway_configure_lb_ignore_errors: "false"
      env_apigateway_configure_extended_settings: "true"
      env_apigateway_configure_portalgateway: "true"
      env_apigateway_lb_http_url: "http://apigateway:5555"
      env_apigateway_lb_https_url: "https://apigateway:5543"
      env_apigateway_lb_websocket_url: "ws://apigateway"
      env_apigateway_lb_http_url_alt1: "http://apigateway:5555"
      env_apigateway_lb_https_url_alt1: "https://apigateway:5543"
      env_apigateway_lb_websocket_url_alt1: "ws://apigateway"
      env_apigateway_lb_webapp_url: "http://apigateway:9072"
      env_apigateway_portalgateway_gateway_url: "http://apigateway:5555"
      env_apigateway_portalgateway_gateway_username: "Administrator"
      env_apigateway_portalgateway_gateway_password: "${SAG_PASSWORD}"
      env_apigateway_portalgateway_portal_url: "https://apiportal:18102"
      env_apigateway_portalgateway_portal_username: "system"
      env_apigateway_portalgateway_portal_password: "manager"
    networks:
      - stack
    depends_on: 
      apigateway:
        condition: service_started

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG_ELASTIC_VERSION}
    hostname: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - http.port=9200
      - transport.port=9300
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - stack

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG_ELASTIC_VERSION}
    hostname: kibana
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      XPACK_SECURITY_ENABLED: "true"
      SERVER_HOST: 0.0.0.0
      SERVER_BASEPATH: /apigatewayui/dashboardproxy
      KIBANA_INDEX: gateway_apigateway_dashboard
      NODE_OPTIONS: --max_old_space_size=2048
    networks:
      - stack
    depends_on: 
      elasticsearch:
        condition: service_started
    ## this "service_healthy" is very important because apigateway must first create the indices in elastic search BEFORE Kibana starts
      apigateway:
        condition: service_healthy