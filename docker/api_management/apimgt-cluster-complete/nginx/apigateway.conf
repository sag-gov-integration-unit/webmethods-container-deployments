  ## stateless load balancer
  upstream target_apigateway_runtime {
    server apigateway1:5555 max_fails=0 fail_timeout=30s;
    server apigateway2:5555 max_fails=0 fail_timeout=30s;
    keepalive 8;
  }

  ## sticky load balancer
  upstream target_apigateway_ui {
    ip_hash;
    server apigateway1:9072 max_fails=0 fail_timeout=30s;
    server apigateway2:9072 max_fails=0 fail_timeout=30s;
    keepalive 8;
  }

  server {
    listen       9955;
    server_name  _;
    access_log   /var/log/nginx/apigateway-runtime.access.log  main;
    
    absolute_redirect off;

    # healthcheck
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    ## stateless proxy pass (goes to any backend everytime)
    location / {
        proxy_pass    http://target_apigateway_runtime;
    }
  }

  server {
    listen       9972;
    server_name  _;
    access_log   /var/log/nginx/apigateway-ui.access.log  main;
    
    absolute_redirect off;

    # healthcheck
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    location = / {  
      return 301 /apigatewayui/;
    }
    
    location = /apigatewayui/ {  
      return 301 /apigatewayui/login;
    }

    # apigateway ui - sticky by source ip
    location /apigatewayui/ {
      proxy_pass      http://target_apigateway_ui/apigatewayui/;
    }
  }