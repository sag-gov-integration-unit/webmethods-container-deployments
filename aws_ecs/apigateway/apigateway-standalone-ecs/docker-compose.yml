version: "3.2"

networks:
  apigwnet:

x-aws-vpc: ${TARGET_VPC}
x-aws-loadbalancer: ${TARGET_LOADBALANCER}
x-aws-cluster: ${TARGET_ECS_CLUSTER}
x-aws-cloudformation:
  Resources:
    ReverseproxynginxTCP80TargetGroup:
      Properties:
        HealthCheckPath: /rest/apigateway/health
        Matcher:
          HttpCode: "200"
        TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '180'
        - Key: slow_start.duration_seconds
          Value: '300'
        - Key: load_balancing.algorithm.type
          Value: 'round_robin'          
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '3600'

services:

  reverseproxy_nginx:
    image: ${REG_ECS}webmethods-apigateway-reverseproxy:${TAG_APIGATEWAY:-dev-10.7-latest}
    build:
      context: nginx
      dockerfile: Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    ports:
      - 80:80
    networks:
      - apigwnet
    depends_on:
      - apigateway

  apigateway:
    image: ${REG_ECS}webmethods-apigateway-standalone:${TAG_APIGATEWAY:-dev-10.7-latest}
    build:
      context: .
      dockerfile: Dockerfile.ecr.apigateway
      args:
        BASE_IMAGE: ${REG}webmethods-apigateway-standalone:${TAG_APIGATEWAY:-dev-10.7-latest}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '2'
          memory: 4096M
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    environment: 
      APIGW_ELASTICSEARCH_TENANTID: apigateway
      JAVA_MIN_MEM: 1g
      JAVA_MAX_MEM: 1g
      IDS_HEAP_SIZE: 1g
      JAVA_OPTS: ""
      RUNTIME_WATT_PROPERTIES: "watt.net.timeout=400 watt.server.threadPool=50 watt.server.threadPoolMin=25 watt.net.maxClientKeepaliveConns=10"
    networks:
      - apigwnet

  apigateway_configurator:
    image: ${REG_ECS}webmethods-apigateway-configurator:${TAG_APIGATEWAY_CONFIGURATOR}
    build:
      context: .
      dockerfile: Dockerfile.ecr.common
      args:
        BASE_IMAGE: ${REG}webmethods-apigateway-configurator:${TAG_APIGATEWAY_CONFIGURATOR}
    environment:
      env_apigateway_configure_default_ignore_errors: "true"
      env_apigateway_configure_lb: "true"
      env_apigateway_configure_lb_ignore_errors: "false"
      env_apigateway_configure_extended_settings: "true"
      env_apigateway_configure_portalgateway: "true"
      env_apigateway_host: apigateway
      env_apigateway_port: "5555"
      env_apigateway_rest_user: Administrator
      env_apigateway_rest_password: "${SAG_PASSWORD}"
      env_apigateway_rest_password_old: "manage"
      env_apigateway_lb_http_url: "http://apigateway:5555"
      env_apigateway_lb_https_url: "https://apigateway:5543"
      env_apigateway_lb_websocket_url: "ws://apigateway"
      env_apigateway_lb_http_url_alt1: "http://apigateway:5555"
      env_apigateway_lb_https_url_alt1: "https://apigateway:5543"
      env_apigateway_lb_websocket_url_alt1: "ws://apigateway"
      env_apigateway_lb_webapp_url: "http://apigateway:9072"
      env_apigateway_portalgateway_gateway_url: "http://apigateway:5555"
      env_apigateway_portalgateway_gateway_username: "Administrator"
      env_apigateway_portalgateway_gateway_password: "${SAG_PASSWORD}"
      env_apigateway_portalgateway_portal_url: "https://apiportal:18102"
      env_apigateway_portalgateway_portal_username: "system"
      env_apigateway_portalgateway_portal_password: "manager"
    networks:
      - apigwnet
    depends_on:
      - apigateway

  webmethods-sample-apis-uszip:
    image: ${REG_ECS}webmethods-sample-apis-uszip:${TAG_SAMPLE_APIS}
    build:
      context: .
      dockerfile: Dockerfile.ecr.common
      args:
        BASE_IMAGE: ${REG}webmethods-sample-apis-uszip:${TAG_SAMPLE_APIS}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - apigwnet

  webmethods-sample-apis-bookstore:
    image: ${REG_ECS}webmethods-sample-apis-bookstore:${TAG_SAMPLE_APIS}
    build:
      context: .
      dockerfile: Dockerfile.ecr.common
      args:
        BASE_IMAGE: ${REG}webmethods-sample-apis-uszip:${TAG_SAMPLE_APIS}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - apigwnet

  webmethods-sample-apis-covid:
    image: ${REG_ECS}webmethods-sample-apis-covid:${TAG_SAMPLE_APIS}
    build:
      context: .
      dockerfile: Dockerfile.ecr.common
      args:
        BASE_IMAGE: ${REG}webmethods-sample-apis-uszip:${TAG_SAMPLE_APIS}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - apigwnet

  continuous-curl-runner:
    image: lanimall/continuous-curl-runner:0.0.1
    environment: 
      REQUESTS_JSON: "[{\"method\":\"GET\",\"url\":\"http://reverseproxy_nginx/gateway/bookstore/1.0/books\"},{\"method\":\"GET\",\"url\":\"http://reverseproxy_nginx/gateway/uszip/1.0/findZip/Rockville/MD\"},{\"method\":\"GET\",\"url\":\"http://reverseproxy_nginx/gateway/covid/1.0/findCovidByZip?zip_code=22201\"}]"
      REQUESTS_INTERVAL: "5"
      REQUESTS_SELECTION: "random"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - apigwnet
    depends_on:
      - reverseproxy_nginx